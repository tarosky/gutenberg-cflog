name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    - issue/*
    # - dev/harai

env:
  AWS_ACCOUNT_ID: '013230744746'
  RELEASE_ACCESS_KEY_ID: AKIAQGFE5ESVNZ6MPQWV
  REPO_BUCKET: gutenberg-ext-cflog-repobucket-1k2dvzckylerk
  GO_VERSION: 1.21.3

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '~${{env.GO_VERSION}}'
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        prefix: build_number_generator
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    - name: Save the build number
      run: echo "$BUILD_NUMBER" > work/BUILD_NUMBER
    - name: Embed build number into code
      run: echo "$BUILD_NUMBER" > ./VERSION
    - run: >
        go build
        -ldflags "-X github.com/tarosky/gutenberg-cflog/cflog.Version=$BUILD_NUMBER"
        -tags lambda.norpc
        -o work/bootstrap
        lambda/lambda.go
      env:
        GOARCH: amd64
        GOOS: linux
    - run: zip -j cflog.zip ./bootstrap
      working-directory: work
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: work/cflog.zip
    - uses: actions/upload-artifact@v2
      with:
        name: build-number
        path: work/BUILD_NUMBER

  release:
    needs:
    - build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
    - uses: actions/download-artifact@v2
      with:
        name: build-number
    - name: set BUILD_NUMBER
      run: echo "BUILD_NUMBER=$(< ./BUILD_NUMBER)" >> $GITHUB_ENV
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: build-${{env.BUILD_NUMBER}}
        release_name: Build ${{env.BUILD_NUMBER}}
        draft: false
        prerelease: false
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./cflog.zip
        asset_name: cflog.build-${{env.BUILD_NUMBER}}-awslambda-provided-amd64.zip
        asset_content_type: application/octet-stream
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{env.RELEASE_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_RELEASE_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-1
    - run: aws s3 cp ./cflog.zip s3://$REPO_BUCKET/cflog.build-${{env.BUILD_NUMBER}}-awslambda-provided-amd64.zip
